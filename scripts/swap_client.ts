import axios from 'axios';
import { SwapResponse, SwapParam } from '../src/types';
import { formatUnits, parseUnits } from '../src/utils';
import { tokens } from '../src/tokens';
import { logger } from '../src/logging';

import dotenv from 'dotenv';
dotenv.config();

const url = `http://${process.env.SERVER_IP}:${process.env.SERVER_PORT}/swap`;

async function testUniswapV3() {
  const calldata =
    '0xce8c4316000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc20000000000000000000000007fc66500c84a76ad7e9c93437bfc5ac33e2ddae900000000000000000000000000000000000000000000000000038d7ea4c68000000000000000000000000000000000000000000000000000003ff7c62e6d7a3000000000000000000000000000000000000000000000000000000000626a5df6000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001400000000000000000000000000000000000000000000000000000000000000840000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000038d7ea4c68000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000002e000000000000000000000000000000000000000000000000000000000000004c000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000160000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2000000000000000000000000000000000000000000000000000000000000000100000000000000000000000003f911aedc25c770e701b8f563e8102cfacd62c0000000000000000000000000000000000000000000000000000000000000000100000000000000000000000003f911aedc25c770e701b8f563e8102cfacd62c00000000000000000000000000000000000000000000000000000000000000001800000000000000000002710c2e9f25be6257c210d7adf0d4cd6e3e881ba25f80000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000004c404e6e77f660c8edd26e000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000060000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc20000000000000000000000006b175474e89094c44da98b954eedeac495271d0f0000000000000000000000000000000000000000000000000000000000000bb800000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000001600000000000000000000000006b175474e89094c44da98b954eedeac495271d0f0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000c837bbea8c7b0cac0e8928f797ceb04a34c9c06e0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000231b7589426ffe1b75405526fc32ac09d44364c40000000000000000000000000000000000000000000000000000000000000001800000000000000000002710231b7589426ffe1b75405526fc32ac09d44364c4000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000001600000000000000000000000002260fac5e5542a773aa44fbcfedf7c193bc2c5990000000000000000000000000000000000000000000000000000000000000001000000000000000000000000c837bbea8c7b0cac0e8928f797ceb04a34c9c06e0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000a3603484ebfa1675778ce2de02c0ce96678a4f340000000000000000000000000000000000000000000000000000000000000001000000000000000000002710a3603484ebfa1675778ce2de02c0ce96678a4f3400000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000';
  const inputToken = '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2'; // WETH
  const outputToken = '0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9'; //AAVE
  const ethValue = '0';
  const inputAmount = '1000000000000000000';

  const query: SwapParam = {
    calldata,
    inputToken,
    outputToken,
    inputAmount,
    ethValue,
  };

  try {
    const res = await axios.get(url, { params: query });
    const quoteRes = res.data as SwapResponse;
    logger.info(formatUnits(quoteRes.outputAmount, 6));
  } catch (error: any) {
    logger.fatal(`${error.response.data.error}`);
  }
}

async function main() {
  await testUniswapV3();
}

main().catch(console.error);
